# Datadog Agent with Logs, APM, Processes, NPM, Events, System Probe, Security(CSPM+CWS), ClusterAgent, OrchestratorExplorer (Live Containers), Check Runners
# USM, DSM , Remote config enabled

# targetSystem -- Target OS for this deployment (possible values: linux, windows)
targetSystem: "linux"

## Edit this
datadog:
  apiKey: db4d4db5f1edc7a2fe714f9d744779b0  #<<<<<ENTER YOUR API KEY HERE 
  appKey: 52c5b48be6f9b2a782fb4fc9b7c8e5b7601744b9 #<<<<<ENTER YOUR APP KEY HERE
  clusterName:  kenneth-foo-std-gke #<<<<<ENTER YOUR Cluster Name HERE
  site: datadoghq.com  #<<<<<ENTER YOUR SITE (US1)
  collectEvents: true
  tags: [kenneth:foo]
  kubelet:
    tlsVerify: "false"

## Logs 
  logs:
    enabled: true
    containerCollectAll: true
    containerCollectUsingFiles: true
    autoMultiLineDetection: true

## APM
  apm:
    portEnabled: true
    port: 8126
    socketEnabled: true
    socketPath: /var/run/datadog/apm.socket
    hostSocketPath: /var/run/datadog/

## OTLP ingest related configuration
  otlp:
    receiver:
      protocols:
        grpc:
          enabled: true
        http:
          enabled: true


## Process Monitoring
  processAgent:
    enabled: true
    processCollection: true
  systemProbe:
    enableTCPQueueLength: true
    enableOOMKill: true
    collectDNSStats: true

## Kubernetes Orchestrator
  orchestratorExplorer:
    enabled: true

## Network Performance Monitoring
  networkMonitoring:
    enabled: true

## Universal Service Monitoring
  serviceMonitoring:
    enabled: true

## Enable Data Streams Monitoring
  dataStreamsMonitoring:
    enabled: true

## Cloud Security Posture Management
  securityAgent:
    compliance:
      enabled: true

## Cloud Workload Security
    runtime:
      enabled: true
      fimEnabled: true  ##Set to true to enable Cloud Workload Security (CWS) File Integrity Monitoring
      network: 
        enabled: true     ##Set to true to enable the collection of CWS network events

## Remote Configuration
remoteConfiguration:
  enabled: true

## View Agent Config from Datadog UI
inventories_configuration_enabled: true

## Kubernetes Cluster Agent
clusterAgent:
  enabled: true
  replicas: 2
  rbac:
    create: true
    serviceAccountName: default
  metricsProvider:
    enabled: true
    createReaderRbac: true
    useDatadogMetrics: true
    service:
      type: ClusterIP
      port: 8443
  admissionController:
    enabled: true
    mutateUnlabelled: true
agents:
  rbac:
    create: true
    serviceAccountName: default
clusterChecksRunner:
  enabled: true
  rbac:
    create: true
    serviceAccountName: default
  replicas: 2

## GKE
providers:
  gke:
    # providers.gke.cos -- Enables Datadog Agent deployment on GKE with Container-Optimized OS (COS)
    cos: true
